(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{928:function(n,t,e){"use strict";e.r(t);var a=e(114),s=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"操作按钮"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作按钮"}},[n._v("#")]),n._v(" 操作按钮")]),n._v(" "),e("hr"),n._v(" "),e("common-code-format",{attrs:{title:"显示table外操作按钮",description:"在组件中需配置：toolbar数组，超过3个按钮，第4个按钮会以下拉的方式展示(icon的配置需以ElementUI内置icon为准)；前提条件是，必须使用插槽toolbar；新增highlight-current-row可以高亮选中行的颜色；按钮的颜色是以ElementUI内置button的type为准"}},[e("docsComponents-TTable-operationOutside"),n._v(" "),e("highlight-code",{attrs:{slot:"codeText"},slot:"codeText"},[e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("<template>\n    <div class=\"t-table\" style=\"width:100%;\">\n       <t-table :table=\"table\">\n        \x3c!-- 必须要有toolbar插槽 --\x3e\n        <template #toolbar></template>\n       </t-table>\n    </div>\n</template>\n<script>\n    export default {\n        data () {\n            return {\n                table: {\n                    data: [\n                        {\n                            id: '1',\n                            date: '2019-09-25',\n                            name: '张三',\n                            status: '2',\n                            address: '广东省广州市天河区'\n                        },\n                        {\n                            id: '2',\n                            date: '2019-09-26',\n                            name: '张三1',\n                            status: '1',\n                            address: '广东省广州市天广东省广州市天河区2广东省广州市天河区2河区2'\n                        },\n                        {\n                            id: '3',\n                            date: '2019-09-27',\n                            name: '张三2',\n                            status: '3',\n                            address: '广东省广州市天河区3'\n                        }\n                    ],\n                    column: [\n                        { prop: 'name', label: '姓名', minWidth: '100', sort: true },\n                        { prop: 'date', label: '日期', minWidth: '180', sort: true },\n                        { prop: 'address', label: '地址', minWidth: '220', sort: true },\n                        { prop: 'date', label: '日期', minWidth: '180', sort: true },\n                        { prop: 'address', label: '地址', minWidth: '220' }\n                    ],\n                    // 表格外操作，选中表格某行，可以将其数据传出\n                    toolbar: [\n                        {\n                            text: '返回上一个页面1',\n                            icon: 'el-icon-circle-plus-outline',\n                            type: 'danger',\n                            fun: this.getBack\n                        },\n                        {\n                            text: '返回上一个页面2',\n                            icon: 'el-icon-circle-plus-outline',\n                            type: 'danger',\n                            fun: this.getBack\n                        },\n                        {\n                            text: '返回上一个页面3',\n                            icon: 'el-icon-circle-plus-outline',\n                            type: 'danger',\n                            fun: this.getBack\n                        },\n                        {\n                            text: '返回上一个页面4',\n                            icon: 'el-icon-circle-plus-outline',\n                            type: 'danger',\n                            fun: this.getBack\n                        }\n                    ]\n                }\n            }\n        }\n    }\n<\/script>\n")])])])])],1),n._v(" "),e("common-code-format",{attrs:{title:"显示table内操作按钮",description:"在组件中需配置：operator数组，是显示按钮数且点击后将当前行数据传出；operatorConfig对象是操作列样式（可以设置宽度/列标题及是否固定在最左/右侧）；按钮的颜色是以ElementUI内置button的type为准；noshow:[{key:'fields',val:'isHasVal'},{key:'status',val:[0,1,99]},{key:'channelCode',val:['bank']}]；注释： noshow中的key值(fields/status/channelCode)是表格后台返回的字段；当val等于字符串'isHasVal'时,字段'fields'返回为空时，此行操作按钮隐藏；以上综合：当'status'为0/1/99并且'channelCode'为'bank'及'fields'为空时,隐藏按钮——noshow:多种状态控制按钮的显示与隐藏；show: { key: 'status', val: [3,4] }表status值为3或者4时，显示此操作健 根据后台字段返回是数字还是字符串来显示。"}},[e("docsComponents-TTable-operationInside"),n._v(" "),e("highlight-code",{attrs:{slot:"codeText"},slot:"codeText"},[e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("<template>\n    <div class=\"t-table\" style=\"width:100%;\">\n       <t-table :table=\"table\"/>\n    </div>\n</template>\n<script>\n    export default {\n        data () {\n            return {\n                table: {\n                    data: [\n                        {\n                            id: '1',\n                            date: '2019-09-25',\n                            name: '张三',\n                            status: '2',\n                            address: '广东省广州市天河区'\n                        },\n                        {\n                            id: '2',\n                            date: '2019-09-26',\n                            name: '张三1',\n                            status: '1',\n                            address: '广东省广州市天广东省广州市天河区2广东省广州市天河区2河区2'\n                        },\n                        {\n                            id: '3',\n                            date: '2019-09-27',\n                            name: '张三2',\n                            status: '3',\n                            address: '广东省广州市天河区3'\n                        }\n                    ],\n                    column: [\n                        { prop: 'name', label: '姓名', minWidth: '100', sort: true },\n                        { prop: 'date', label: '日期', minWidth: '180', sort: true },\n                        { prop: 'address', label: '地址', minWidth: '220', sort: true },\n                        { prop: 'date', label: '日期', minWidth: '180', sort: true },\n                        { prop: 'address', label: '地址', minWidth: '220' }\n                    ],\n                    // 表格内操作列\n                        operator: [\n                            {\n                                text: '新增',\n                                type: 'primary',\n                                fun: this.add,\n                                // status为1时，不显示此按钮\n                                noshow: [{ key: 'status', val: ['1'] }]\n                            },\n                            {\n                                text: '编辑',\n                                type: 'danger',\n                                // status值为2时，展示此按钮\n                                show: { key: 'status', val: ['2'] },\n                                fun: this.edit\n                            },\n                            {\n                                text: '删除',\n                                fun: this.del\n                            }\n                        ],\n                        // 操作列样式\n                        operatorConfig: {\n                        fixed: 'right', // 固定列表右边（left则固定在左边）\n                        width: 280,\n                        label: '操作'\n                        }\n                    }\n                }\n            },\n             methods: {\n                // 新增\n                add (val) {\n                    console.log('新增', val)\n                },\n                // 编辑\n                edit (val) {\n                    console.log('编辑', val)\n                },\n                // 删除\n                del (val) {\n                    this.$confirm('是否永久删除该项, 是否继续?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                        console.log('删除', val)\n                    }).catch(() => {\n                        this.$message.info('已取消删除')\n                    })\n                }\n            }\n        }\n<\/script>\n")])])])])],1)],1)}),[],!1,null,null,null);t.default=s.exports}}]);